{"content":"\n\nYOVENDO AI WHATSAPP \nBOT - Sfida Hackathon\nIn questo progetto stimolante, svilupperete un chatbot intelligente che \nrisponderà su WhatsApp per conto delle aziende registrate sulla \npiattaforma Yovendo.\nIl vostro compito sarà quello di costruire un sistema che sfrutti il Retrieval \nAugmented Generation (RAG) e l'API di Gemini o altre IA per fornire \nrisposte personalizzate e contestualmente rilevanti. Questa sfida metterà \nalla prova le vostre competenze tecniche e la vostra creatività \nnell'integrare diverse tecnologie in un'unica soluzione aziendale \ninnovativa.\n\nRequisiti Tecnici\nBackend Development\nCreare un backend utilizzando Node.js, Express, Fastify o framework simili per gestire la logica dell'applicazione \ne le connessioni API.\nIntegrazione WhatsApp\nConnettere un numero WhatsApp tramite servizi come Twilio o 360Dialog per abilitare la comunicazione \nbidirezionale con gli utenti.\nImplementazione AI\nIntegrare modelli di intelligenza artificiale come Gemini, OpenAI o Claude per generare risposte contestuali e \npertinenti.\nGestione Dati (opzionale)\nRegistrare tutte le conversazioni in un database come Supabase, PostgreSQL o Firebase, mantenendo una \nstruttura multi-tenant efficiente.\nOgni componente dovrà operare in modo sinergico per creare un sistema che permetta a ciascuna organizzazione di avere la \npropria knowledge base, personalizzare il tono comunicativo e gestire l'invio di documenti PDF o immagini secondo le proprie \nesigenze specifiche.\n\nRequisiti Minimi del Progetto\nRisposta Automatica\nIl sistema deve essere in grado di rispondere \nautomaticamente ai messaggi ricevuti su WhatsApp, \ngarantendo un'esperienza utente fluida e reattiva.\nIntelligenza Artificiale\nUtilizzo di modelli AI avanzati per generare risposte \ncontestuali, pertinenti e personalizzate in base \nall'organizzazione cliente.\nRAG su Documenti\nPossibilità di caricare documenti aziendali in formato PDF o testo e di eseguire query su di essi utilizzando tecniche di \nRetrieval Augmented Generation.\nQuesti requisiti costituiscono la base funzionale minima che ogni soluzione deve soddisfare per essere considerata valida. Il \nsistema deve inoltre mantenere un database completo delle conversazioni per riferimenti futuri e analisi.\n\nFlusso\nIl processo di funzionamento del chatbot WhatsApp segue questi passaggi sequenziali:\nRicezione messaggio su WhatsApp\nIl sistema riceve il messaggio inviato dall'utente \ntramite WhatsApp\nIdentificazione azienda ³ organizationId\nIl sistema identifica l'organizzazione associata al \nnumero WhatsApp\nCreazione embedding del messaggio\nIl testo viene convertito in vettori numerici per \nl'elaborazione\nQuery su Qdrant (RAG)\nRicerca dei documenti rilevanti nel database \nvettoriale\nPrompt Gemini con documenti trovati\nInvio del contesto e della query al modello di AI\nRisposta generata dall'IA\nCreazione di una risposta contestualizzata e \npertinente\nInvio della risposta su WhatsApp\nTrasmissione del messaggio all'utente finale\nLogging e analisi\nRegistrazione della conversazione per miglioramenti \nfuturi\n\nDeliverables del Progetto\nRepository Completo\nCodice sorgente completo con struttura organizzata, \ninclusi tutti i file necessari per il funzionamento \ndell'applicazione. Il repository deve includere un \nREADME dettagliato con istruzioni di installazione e \nconfigurazione.\nDocumentazione Tecnica\nDocumentazione che descrive l'architettura del sistema, \nle API utilizzate, il modello dati e le decisioni di design \nprese durante lo sviluppo. Includere diagrammi esplicativi \ne spiegazioni delle funzionalità principali.\nDemo Funzionante\nVersione dimostrativa dell'applicazione che mostri tutte \nle funzionalità implementate. La demo deve essere \nfacilmente accessibile e testabile dalla giuria, \npreferibilmente con esempi pre-configurati.\nPresentazione\nSlide o video di presentazione che illustri il progetto, le \nsfide affrontate, le soluzioni adottate e i possibili sviluppi \nfuturi. Evidenziare i punti di forza della vostra \nimplementazione.\nTutti i deliverables devono essere consegnati in forma completa e professionale. Ricordate che la soluzione dovrà essere \nvalutata non solo per la sua funzionalità tecnica, ma anche per la sua usabilità e comprensibilità da parte di utenti non tecnici.\n\nFunzionalità e Tecnologie Consigliate\nLa soluzione richiede l'integrazione di diverse tecnologie moderne per garantire un'esperienza completa.\nRicezione WhatsApp\nTwilio WhatsApp API per gestire la ricezione e l'invio dei \nmessaggi\nRisposte AI\nPer generare risposte intelligenti e contestuali\nKnowledge Base\nQdrant (vector DB) per l'archiviazione e il recupero \nefficiente dei dati vettoriali\nBackend\nNode.js + Express / Fastify\nFrontend\nReact / Vite\n\nMateriale e Risorse Disponibili\nTutte queste risorse sono state predisposte per aiutarvi a concentrarvi sugli aspetti creativi e tecnici del progetto, \nminimizzando gli ostacoli amministrativi e logistici. Utilizzate il canale Slack per qualsiasi domanda o richiesta di chiarimento \ndurante lo svolgimento dell'hackathon.\nBudget\nCarta di credito intestata \ndirettamente all'organizzatore per \nevitare approvazioni amministrative, \nfacilitando acquisti rapidi di servizi e \nAPI necessari.\nComunicazione\nCanale Slack dedicato per \ncomunicazioni, supporto tecnico e \naggiornamenti relativi all'Hackathon, \ngarantendo collaborazione \nefficiente.\n\nLinee Guida per la Sicurezza\nIsolamento dei Tenant\nGarantire la completa separazione dei dati tra organizzazioni diverse\nProtezione delle Credenziali\nUtilizzare variabili d'ambiente per API keys e dati sensibili\nAutenticazione Robusta\nImplementare meccanismi sicuri di autenticazione e \nautorizzazione\nLa sicurezza del sistema è un aspetto fondamentale di questo progetto. Ogni messaggio deve essere sempre associato a un \nidentificatore di organizzazione specifico (organizationId) per garantire che le informazioni rimangano isolate tra i diversi \ntenant.\nÈ essenziale evitare qualsiasi possibilità di contaminazione tra i dati di organizzazioni diverse, sia a livello di documenti \ncaricati che di risposte generate. L'hardcoding delle chiavi API è assolutamente da evitare; utilizzate sempre file .env o sistemi \ndi gestione dei segreti appropriati.\nImplementate controlli di accesso rigorosi per garantire che ogni utente possa accedere solo alle informazioni pertinenti alle \norganizzazioni a cui appartiene.\n\nConsegna Finale e Deadline\n7\nGiorni\nTempo totale per completare il progetto \ndall'inizio alla consegna finale\n100%\nFunzionalità\nPercentuale di requisiti minimi che \ndevono essere implementati\n24/7\nSupporto\nDisponibilità del canale di \ncomunicazione per assistenza\nL'MVP consegnato dovrà includere tutti i log di funzionamento per dimostrare l'efficacia e l'affidabilità della soluzione. \nRicordate che il prodotto finale deve essere progettato pensando all'utente finale: un imprenditore, non uno sviluppatore. \nL'interfaccia e l'esperienza utente devono quindi essere intuitive e accessibili.\nLa deadline per la consegna di tutti i materiali richiesti è fissata a 7 giorni dall'inizio dell'hackathon. Non saranno concesse \nproroghe, quindi pianificate attentamente il vostro tempo. Una gestione efficace delle priorità sarà fondamentale per \ncompletare tutti i requisiti minimi entro la scadenza stabilita.\nPreparatevi a presentare e difendere il vostro progetto davanti alla giuria, evidenziando i punti di forza della vostra \nimplementazione e le sfide che avete superato durante lo sviluppo.\n\nPer ricapitolare ecco i Criteri di Valutazione\nFunziona e risponde in \nmodo coerente\nIl bot deve fornire risposte \naccurate e pertinenti alle \nrichieste degli utenti\nUsa correttamente i \ndocumenti RAG\nImplementazione efficace del \nsistema di Retrieval Augmented \nGeneration\nÈ estensibile (codice \nmodulare)\nArchitettura scalabile che \npermette future espansioni e \nmiglioramenti\nUX semplice\nInterfaccia intuitiva e accessibile per utenti non tecnici\nC'è logging / analisi delle conversazioni\nSistema di monitoraggio per tracciare e analizzare le \ninterazioni"}